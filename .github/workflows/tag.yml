# name: Auto Tag

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tag:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Create tag
#         id: tag
#         run: echo "TAG=v1.0.${{ github.run_number }}" >> $GITHUB_ENV

#       - name: Push tag
#         run: |
#           git config --local user.email "actions@github.com"
#           git config --local user.name "GitHub Actions"
#           git tag ${{ env.TAG }}
#           git push origin ${{ env.TAG }}


name: Auto Tag

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get previous version
        id: get_version
        run: | # Получаем теги, отсортированные по версии (в обратном порядке) и фильтруем постфиксы
          TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          
          if [ -z "$TAG" ]; then
            echo "TAG=v1.0.0" >> $GITHUB_ENV
          else
            echo "TAG=$TAG" >> $GITHUB_ENV
          fi

          echo "Current tags: $TAG" 

      - name: Determine new version
        id: version
        run: |  # Извлекаем Major, Minor и Patch из тега. Поднимаем соотвествующу версию
          CLEAN_TAG=${TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_TAG"
          
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)

          if [[ "$LAST_COMMIT_MSG" == *"major"* ]]; then
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
          elif [[ "$LAST_COMMIT_MSG" == *"feat"* ]]; then
              MINOR=$((MINOR + 1))
              PATCH=0
          elif [[ "$LAST_COMMIT_MSG" == *"fix"* ]]; then
              PATCH=$((PATCH + 1))
          else
              echo "No version bump needed"
              exit 0
          fi

          echo "NEW_TAG=v${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_ENV

      - name: Create tag
        id: tag
        run: echo "TAG=${{ env.NEW_TAG }}" >> $GITHUB_ENV # Промежуточный этап

      - name: Push tag
        run: | # Пуш тега
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}
